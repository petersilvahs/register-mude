<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMudeRegister.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>